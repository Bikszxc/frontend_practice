@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;700&display=swap');

* {
    font-family: 'JetBrains Mono', 'Courier New', monospace;
}

.puff-in-center {
    -webkit-animation: puff-in-center 0.7s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;
    animation: puff-in-center 0.7s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;
}

@keyframes puff-in-center {
    0% {
        transform: scale(2);
        filter: blur(4px);
        opacity: 0;
    }
    100% {
        transform: scale(1);
        filter: blur(0px);
        opacity: 1;
    }
}

/* Glitch effect for title */
.glitch-effect {
    position: relative;
    animation: glitch 2s infinite;
}

@keyframes glitch {
    0%, 100% { transform: translate(0); }
    10% { transform: translate(-2px, -1px); }
    20% { transform: translate(2px, 1px); }
    30% { transform: translate(-1px, 2px); }
    40% { transform: translate(1px, -1px); }
    50% { transform: translate(-1px, -2px); }
    60% { transform: translate(2px, 1px); }
    70% { transform: translate(-2px, -1px); }
    80% { transform: translate(1px, 2px); }
    90% { transform: translate(-1px, -1px); }
}

/* Blinking cursor */
.blinking-cursor {
    animation: blink 1s infinite;
}

@keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
}

.task-item {
    transition: transform 0.2s ease-out, opacity 0.2s ease-out;
}

.task-item.new-task {
    animation: slideIn 0.3s ease forwards;
}

.preparing-insert {
    opacity: 0;
    transform: translateX(-20px);
    transition: none;
}

.new-task-top {
    max-height: 0;
    padding-top: 0;
    padding-bottom: 0;
    margin-top: 0;
    margin-bottom: 0;
    opacity: 0;
    overflow: hidden;
    transform: translateX(-20px);
}

.new-task-growing {
    max-height: 200px;
    padding: 0.75rem;
    margin-bottom: 8px;
    opacity: 1;
    transform: translateX(0);
    transition: all 0.5s ease-out;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }
    to {
        opacity: 0.6;
        transform: translateX(0);
    }
}

.task-item.removing {
    animation: slideOut 0.3s ease forwards;
}

@keyframes slideOut {
    to {
        opacity: 0;
        transform: translateX(20px);
        max-height: 0;
        padding: 0;
        margin: 0;
    }
}

/* Completed task styling */
.task-completed {
    opacity: 0.6;
    text-decoration: line-through;
    transition: fade 0.5s ease-out;
}

@keyframes fade {
    to {
        opacity: 0.6;
    }
}


/* Custom scrollbar */
::-webkit-scrollbar {
    width: 2px;
}

::-webkit-scrollbar-track {
    background: #1f2937;
}

::-webkit-scrollbar-thumb {
    background: #4b5563;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #6b7280;
}

/* Button hover effects */
button {
    position: relative;
    overflow: hidden;
}

button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.3s, height 0.3s;
}

button:active::before {
    width: 300px;
    height: 300px;
}

/* Input focus effect */
input:focus {
    box-shadow: 0 0 20px rgba(34, 197, 94, 0.3);
}

/* Stats counter animation */
.stat-number {
    transition: all 0.3s ease;
}

.stat-updated {
    animation: pulse 0.5s ease;
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* Checkbox styling */
.task-checkbox {
    appearance: none;
    width: 18px;
    height: 18px;
    border: 2px solid #4b5563;
    border-radius: 3px;
    background: transparent;
    cursor: pointer;
    position: relative;
    transition: all 0.2s ease;
}

.task-checkbox:checked {
    background: #10b981;
    border-color: #10b981;
}

.task-checkbox:checked::before {
    content: 'âœ“';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #000;
    font-size: 12px;
    font-weight: bold;
}

/* Terminal-like styling */
.terminal-border {
    border: 2px solid #4b5563;
    border-radius: 8px;
    background: #111827;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
}

/* Typing effect */
.typing-effect {
    overflow: hidden;
    border-right: 2px solid #10b981;
    white-space: nowrap;
    animation: typing 2s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
    from { width: 0; }
    to { width: 100%; }
}

@keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: #10b981; }
}